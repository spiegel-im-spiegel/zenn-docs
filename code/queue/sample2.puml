@startuml sample2
!include skinparams.iuml

mainframe sd Sample 2

actor "Manager" as manager
queue "Tasks\n(buffer 2)" as plan
actor "Worker 1" as worker1
actor "Worker 2" as worker2

	manager->plan : add Task(1)
	activate plan
	manager<<--plan
	deactivate plan

	manager->plan : add Task(2)
	activate plan
	manager<<--plan
	deactivate plan

	manager->plan : add Task(3)
	activate plan

par
		plan<-worker2 : get
		activate worker2
		activate plan
		plan-->>worker2 : Task(1)
		deactivate plan
	manager<<--plan
	deactivate plan
	manager->plan : add Task(4)
	activate plan
		worker2->worker2
		deactivate worker2
else
		plan<-worker1 : get
		activate worker1
		activate plan
		plan-->>worker1 : Task(2)
		deactivate plan
	manager<<--plan
	deactivate plan
	manager->plan : add Task(5)
	activate plan
		worker1->worker1
		deactivate worker1
end

par
		plan<-worker1 : get
		activate worker1
		activate plan
		plan-->>worker1 : Task(3)
		deactivate plan
	manager<<--plan
	deactivate plan
	[<<-manager : return home
	destroy manager
		worker1->worker1
		deactivate worker1
else
		plan<-worker2 : get
		activate worker2
		activate plan
		plan-->>worker2 : Task(4)
		deactivate plan
		worker2->worker2
		deactivate worker2
end

par
		plan<-worker1 : get
		activate worker1
		activate plan
		plan-->>worker1 : Task(5)
		deactivate plan
		worker1->worker1
		deactivate worker1
else
		plan<-worker2 : get
		activate worker2
		activate plan
		plan-->>x worker2 : no Task
		deactivate plan
		worker2->>] : return home
		deactivate worker2
		destroy worker2
end

		plan<-worker1 : get
		activate worker1
		activate plan
		plan-->>x worker1 : no Task
		deactivate plan
		worker1->>] : return home
		deactivate worker1
		destroy worker1
@enduml
